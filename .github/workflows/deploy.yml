# To use this GitHub Actions for deploying the bot, please add a new secret "PUBLISH_PROFILE".
# This secret is the content of *.PublishSettings file downloaded from your Azure Web Apps.

name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: '20'

      - run: npm clean-install
      - continue-on-error: true
        run: npm run precommit --if-present --workspaces
      - run: npm run build --if-present --workspaces
      - run: npm test --if-present --workspaces
      - run: zip -1r zipdeploy.zip .
        working-directory: ./packages/bot/
      - uses: actions/upload-artifact@v3
        with:
          name: bot
          path: ./packages/bot/zipdeploy.zip
      - uses: actions/upload-pages-artifact@v2
        with:
          path: ./packages/pages/public

  azure-deploy:
    environment:
      name: azure
      url: ${{ steps.deploy.outputs.webapp-url }}
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/')

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: bot

      - id: deploy
        name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: webchat-streamingbot
          slot-name: production
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          package: zipdeploy.zip

      - name: Ping deployment
        # We need to sleep because Azure Web Apps need time to pick up changes
        run: |
          sleep 5
          curl -s ${{ steps.deploy.outputs.webapp-url }}/health.txt
          curl -s ${{ steps.deploy.outputs.webapp-url }}/ready.txt

  pages-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    name: Deploy
    needs:
      - build
    runs-on: ubuntu-latest
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
